---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: false
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false

# Initial position of HRP4
init_pos: 
  translation: [0.17, -0.52, 0.75]
  rotation: [0.0, 0.0, 1.6]


# Additional robots to load
robots:
  chair:
    module: env/chair
    init_pos:
      translation: [0.0, 0.0, -0.04]
  human:
    module: human
    init_pos:
      translation: [0.12, 0.0, 0.69]
  ground:
    module: env/ground

# General constraints, always on
constraints:
- type: contact
- type:  dynamics 
  robot: hrp4
- type:  dynamics 
  robot: human  
  infTorque: true
  damper: [0.1, 0.01, 0.5]


# Collision constraint
collisions:
- type: collision
  useMinimal: true
- type: collision
  r1: human
  r2: human
  useMinimal: true
- type: collision
  r1: hrp4
  r2: human
  collisions:
    - body1: r_wrist
      body2: TorsoLink
      iDist: 0.03
      sDist: 0.001
      damping: 0
    - body1: l_wrist
      body2: TorsoLink
      iDist: 0.03
      sDist: 0.001
      damping: 0
    - body1: r_wrist
      body2: RArmLink
      iDist: 0.03
      sDist: 0.001
      damping: 0
- type: collision
  r1: hrp4
  r2: chair
  collisions:
    - body1: L_KNEE_P_LINK
      body2: leg_fl
      iDist: 0.05
      sDist: 0.01
      damping: 0
    - body1: R_KNEE_P_LINK
      body2: leg_fr
      iDist: 0.05
      sDist: 0.01
      damping: 0
    - body1: L_KNEE_P_LINK
      body2: leg_rl
      iDist: 0.05
      sDist: 0.01
      damping: 0
    - body1: R_KNEE_P_LINK
      body2: leg_rr
      iDist: 0.05
      sDist: 0.01
      damping: 0
    # - body1: L_F23_LINK
    #   body2: right_handle
    #   iDist: 0.05
    #   sDist: 0.01
    #   damping: 0
    # - body1: L_F33_LINK
    #   body2: right_handle
    #   iDist: 0.05
    #   sDist: 0.01
    #   damping: 0
    # - body1: L_F43_LINK
    #   body2: right_handle
    #   iDist: 0.05
    #   sDist: 0.01
    #   damping: 0
    # - body1: L_F53_LINK
    #   body2: right_handle
    #   iDist: 0.05
    #   sDist: 0.01
    #   damping: 0
- type: collision
  r1: human
  r2: chair
  collisions:
    - body1: TorsoLink
      body2: back_support
      iDist: 0.05
      sDist: 0.01
      damping: 0
    - body1: HipsLink
      body2: chair
      iDist: 0.005
      sDist: 0.001
      damping: 0


# Initial set of contacts
contacts:
- r1: hrp4
  r2: ground
  r1Surface: LeftFoot
  r2Surface: AllGround
- r1: hrp4
  r2: ground
  r1Surface: RightFoot
  r2Surface: AllGround
- r1: human
  r2: ground
  r1Surface: LeftSole
  r2Surface: AllGround
  dof: [1.0, 0.0, 1.0, 0.0, 0.0, 0.0]
- r1: human
  r2: ground
  r1Surface: RightSole
  r2Surface: AllGround
  dof: [1.0, 0.0, 1.0, 0.0, 0.0, 0.0]
- r1: human
  r2: chair
  r1Surface: RCheek
  r2Surface: Top
- r1: human
  r2: chair
  r1Surface: LCheek
  r2Surface: Top

# Some options for a specific robot
hrp4:
  posture:
    stiffness: 1
    weight: 10

human:
  posture:
    stiffness: 1
    weight: 10

# human:
#   posture:
#     stiffness: 10
#     weight: 100
#     target:
#       LArm_0: [-1.3]
#       LElbow: [0.2]
#       LForearm: [-0.9]
#       RArm_0: [1.3]
#       RElbow: [0.2]
#       RForearm: [0.9]
#       LLeg_1: [-1.57]
#       LShin_0: [1.768]
#       LAnkle_0: [-0.22]
#       RLeg_1: [-1.57]
#       RShin_0: [1.768]
#       RAnkle_0: [-0.22]
#       LHand: [0.3]
#       RHand: [0.3]

# Force limit on contacts (if not here, considered support contact and max force is m*g)
# todo : differenciate human and robot
surfacesMaxForces:
  LeftFoot: 500
  RightFoot: 500
  LeftHandFlat: 15
  RightHandFlat: 15
  RLegBack: 500
  LLegBack: 500
  LeftSole: 500
  RightSole: 500
  RightShoulder: 15
  Back: 15
  LCheek: 500
  RCheek: 500

# FSM states
states:
  Wait:
    base: Pause
    duration: 10.0

  MakeContact:
    base: MetaTasks
    tasks:
      RightHandTrajectory:
        type: surfaceTransform
        surface: RightHandFlat
        weight: 2000
        stiffness: 2
        targetSurface:
          robot: human
          surface: RightShoulder
          # offset:
          #   translation: [0.5, 0.0, 0.0]
          #   rotation: [0.0, 0.0, 0.0]
        completion:
          AND:
            - eval: 0.05
            - speed: 0.002 #1e-4 
      LeftHandTrajectory:
        type: surfaceTransform
        surface: LeftHandFlat
        weight: 2000
        stiffness: 2
        targetSurface:
          robot: human
          surface: Back
        completion:
          AND:
            - eval: 0.05
            - speed: 0.002 #1e-4
      LeftArmPosture:
        type: posture
        robot: hrp4
        completion:
          eval: 0.03
        stiffness: 2
        weight: 2000
        activeJoints: [L_ELBOW_P, L_SHOULDER_R, L_SHOULDER_Y]
        target:
          L_SHOULDER_R: [0.3]
          L_SHOULDER_Y: [-1.4]
          L_ELBOW_P: [-0.8]
    AddContactsAfter:
      - r1: hrp4
        r2: human
        r1Surface: RightHandFlat
        r2Surface: RightShoulder
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 0.0] # last one is z axis
      - r1: hrp4
        r2: human
        r1Surface: LeftHandFlat
        r2Surface: Back 
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 0.0]
    # RemoveContactsAfter:
    #   - r1: human
    #     r2: chair
    #     r1Surface: RLegBack
    #     r2Surface: Top
    #   - r1: human
    #     r2: chair
    #     r1Surface: LLegBack
    #     r2Surface: Top
      

  Holding:
    base: RobotHolding
    weight: 1000
    stiffness: 5
    AdmittanceRHand: 
      # surface: RightHand
      # stiffness: 2
      # targetSurface: RightShoulder
      # Tracks the forces along the normal axis of the gripper surface with an admittance coefficient of 0.001
      # Note the high-damping and low stiffness on that axis.
      # All other axis are position controlled and will keep the current gripper position as much as possible 
      admittance: [0,0,0,0,0,0.005]
      stiffness: [5, 5, 5, 5, 5, 0.5]
      damping: [6.3, 6.3, 6.3, 6.3, 6.3, 300]
      maxVel: [0.2, 0.2, 0.5]
        # linear: [0.2, 0.2, 0.5]
        # angular: [0.2, 0.2, 0.2]
      # Target a desired force of 5N along the Z axis of the gripper surface
      wrench: [0, 0, 0, 0, 0, 10] # When the argument is already 6d the couple is at the head, then the force
        # force: [0, 0, -5]
        # couple: [0, 0, 0]
    AdmittanceLHand:
      # surface: LeftHand
      # targetSurface:
      #   robot: human
      #   surface: Back
      admittance: [0,0,0,0,0,0.005]
      stiffness: [5, 5, 5, 5, 5, 0.5]
      damping: [6.3, 6.3, 6.3, 6.3, 6.3, 300]
      maxVel: [0.2, 0.2, 0.5]
        # linear: [0.2, 0.2, 0.5]
        # angular: [0.2, 0.2, 0.2]
      wrench: [0, 0, 0, 0, 0, 10]
        # force: [0, 0, -5]
        # couple: [0, 0, 0]


  HumanGoFront:
    base: MetaTasks
    tasks:
      HumanTransform:
        type: surfaceTransform
        robot: human
        surface: Back
        unactiveJoints: [Torso_1]
        stiffness: 10
        weight: 2000
        completion:
          AND:
            - eval: 0.15
            - speed: 0.01
        targetPosition: [0.2, 0.0, 0.95]
        targetRotation: [0.0, -0.785381, 0.0]
      LeftFootTransform:
        type: surfaceTransform
        robot: human
        surface: LeftSole
        weight: 2000
        stiffness: 5
        completion:
          AND:
            - eval: 0.08
            - speed: 0.01
        targetPosition: [0.32, 0.11, 0.0]
        targetRotation: [0.0, 0.0, 0.0]
      RightFootTransform:
        type: surfaceTransform
        robot: human
        surface: RightSole
        weight: 2000
        stiffness: 5
        completion:
          AND:
            - eval: 0.08
            - speed: 0.01
        targetPosition: [0.32, -0.11, 0.0]
        targetRotation: [0.0, 0.0, 0.0]
    AddContactsAfter:
      - r1: human
        r2: ground
        r1Surface: LeftSole
        r2Surface: AllGround
      - r1: human
        r2: ground
        r1Surface: RightSole
        r2Surface: AllGround
      # - r1: hrp4
      #   r2: human
      #   r1Surface: RightHand
      #   r2Surface: RightShoulder
      #   dof: [1.0, 1.0, 1.0, 1.0, 1.0, 0.0]
      # - r1: hrp4
      #   r2: human
      #   r1Surface: LeftHand
      #   r2Surface: Back 
      #   dof: [1.0, 1.0, 1.0, 1.0, 1.0, 0.0]
    RemoveContactsAfter:
      - r1: human
        r2: chair
        r1Surface: RCheek
        r2Surface: Top
      - r1: human
        r2: chair
        r1Surface: LCheek
        r2Surface: Top  
      


  HumanGoFrontBalance:
    base: MetaTasks
    tasks:
      HumanPosture:
        type: posture
        robot: human
        completion:
          eval: 0.03
        # stiffness: 2
        weight: 2500
        target:
          LAnkle_0: [-0.23]
          RAnkle_0: [-0.23]
          LArm_2: [-0.45]
          RArm_2: [0.45]
              

  HumanGoUp:
    base: MetaTasks
    tasks:
      Humanstand:
        type: posture
        robot: human
        completion:
          eval: 0.01
        stiffness: 3
        weight: 1000
        target:
          Torso_1: [0.15]
          LLeg_1: [-0.0]
          LShin_0: [0.1]
          LAnkle_0: [-0.1]
          RLeg_1: [-0.0]
          RShin_0: [0.1]
          RAnkle_0: [-0.1]
          LArm_2: [-0.0]
          RArm_2: [0.0]
          LForearm: [0.0]
          RForearm: [0.0]
    RemoveContactsAfter:
      - r1: hrp4
        r2: human
        r1Surface: LeftHand
        r2Surface: Back
      - r1: hrp4
        r2: human
        r1Surface: RightHand
        r2Surface: RightShoulder


  GoBackInitHrp4:
    base: MetaTasks
    tasks:
      RightHandTrajectory:
        type: surfaceTransform
        surface: RightHand
        weight: 2000
        stiffness: 2
        targetSurface:
          robot: human
          surface: RightShoulder
          offset:
            translation: [0.0, 0.0, 0.5]
            rotation: [0.0, 0.0, 0.0]
        completion:
          AND:
            - eval: 0.05
            - speed: 0.002 #1e-4 
      LeftHandTrajectory:
        type: surfaceTransform
        surface: LeftHand
        weight: 2000
        stiffness: 2
        targetSurface:
          robot: human
          surface: Back
          offset:
            translation: [0.0, 0.0, 0.5]
            rotation: [0.0, 0.0, 0.0]
        completion:
          AND:
            - eval: 0.05
            - speed: 0.002 #1e-4 
      # RHandTrajectory:
      #   type: bspline_trajectory
      #   robot: hrp4
      #   surface: RightHand
      #   weight: 2000.0
      #   stiffness: 10.0
      #   duration: 3.0
      #   displaySamples: 100
      #   completion:
      #     AND:
      #       - OR:
      #           - eval: 1e-4
      #           - AND:
      #               - timeout: 5.0
      #               - speed: 1e-3
      #       - timeElapsed: true
      #   target:
      #     translation: [0.4, -0.56, 0.67]
      #     rotation: [1.5708, 0., 1.5708]
      #   controlPoints:
      #     - [0.6, -0.2, 1.1]
      # LHandTrajectory:
      #   type: bspline_trajectory
      #   robot: hrp4
      #   surface: LeftHand
      #   weight: 2000.0
      #   stiffness: 10.0
      #   duration: 3.0
      #   displaySamples: 100
      #   completion:
      #     AND:
      #       - OR:
      #           - eval: 1e-4
      #           - AND:
      #               - timeout: 5.0
      #               - speed: 1e-3
      #       - timeElapsed: true
      #   target:
      #     translation: [-0.08, -0.56, 0.67]
      #     rotation: [-1.5708, 0.0, 1.5708]
      #   controlPoints:
      #     - [-0.14, -0.13, 1.11]

  HRP4pos:
    base: MetaTasks
    tasks:
      HRP4HalfSit:
        type: posture
        robot: hrp4
        completion:
          eval: 0.01
        stiffness: 3
        weight: 1000
        target:
          L_HIP_Y: [0.0]
          L_HIP_R: [0.0]
          R_KNEE_P: [0.719]
          L_KNEE_P: [0.719]
          R_ELBOW_P: [-0.524]
          L_ELBOW_P: [-0.524]
          R_HIP_Y: [0.0]
          R_HIP_R: [-0.02]
          R_HIP_P: [-0.384]
          R_KNEE_P: [0.719]
          R_ANKLE_P: [-0.335]
          R_ANKLE_R: [0.02]
          L_HIP_Y: [0.0]
          L_HIP_R: [0.02]
          L_HIP_P: [-0.384]
          L_KNEE_P: [0.719]
          L_ANKLE_P: [-0.335]
          L_ANKLE_R: [-0.02]
          CHEST_P: [0.14]
          CHEST_Y: [0.0]
          NECK_Y: [0.0]
          NECK_P: [0.0]
          R_SHOULDER_P: [-0.052]
          R_SHOULDER_R: [-0.175]
          R_SHOULDER_Y: [0.0]
          R_ELBOW_P: [-0.524]
          R_WRIST_Y: [0.0]
          R_WRIST_P: [0.0]
          R_WRIST_R: [0.0]
          L_SHOULDER_P: [-0.052]
          L_SHOULDER_R: [-0.175]
          L_SHOULDER_Y: [0.0]
          L_ELBOW_P: [-0.524]
          L_WRIST_Y: [0.0]
          L_WRIST_P: [0.0]
          L_WRIST_R: [0.0]

  HumanPos:
    base: MetaTasks
    tasks:
      Humanstand:
        type: posture
        robot: human
        completion:
          eval: 0.01
        stiffness: 3
        weight: 1000
        target:
          Torso_1: [0.15]
          LLeg_1: [-0.0]
          LShin_0: [0.1]
          LAnkle_0: [-0.1]
          RLeg_1: [-0.0]
          RShin_0: [0.1]
          RAnkle_0: [-0.1]
          LArm_2: [-0.0]
          RArm_2: [0.0]
          LForearm: [0.0]
          RForearm: [0.0]

  backstraight:
    base: MetaTasks
    tasks:
      back:
        type: posture
        robot: human
        stiffness: 5
        weight: 10000
        target:
          Torso_1: [0.15]
  
  HumanCoMHigh:
    base: HumanCoM
    weight: 50000
    dimWeight: [1, 1, 0]

  HumanCoMHighUp:
    base: HumanCoM
    weight: 50000
    z_objective: 0.75

  HumanCoMHighStand:
    base: HumanCoM
    weight: 50000
    z_objective: 1.1


       

  front:
    base: Parallel
    states: [HumanCoM, HumanGoFront, Holding]

  balance:
    base: Parallel
    states: [HumanCoMHighUp, HumanGoFrontBalance, Holding]

  up:
    base: Parallel
    states: [HumanCoMHighStand, HumanGoUp, Holding]

  reinit:
    base: Parallel
    states: [HumanCoMHighStand, HRP4pos, HumanPos] # HRP4pos, 

  final:
    base: Parallel
    states: [HumanCoMHighStand, HRP4pos, HumanPos]


# Transitions map
transitions:
- [Pause, OK, MakeContact, Strict]
- [MakeContact, OK, front, Auto]
- [front, OK, balance, Auto]
- [balance, OK, up, Auto]
- [up, OK, reinit, Auto]
- [reinit, OK, final, Strict]

# - [MakeContact, OK, HumanGoFront, Strict]
# - [HumanGoFront, OK, HumanGoFrontBalance, Strict]
# - [HumanGoFrontBalance, OK, HumanGoUp, Strict]
# - [HumanGoUp, OK, FinalState, Strict]

# - [MakeContact, OK, GoingFront, Strict]
# - [GoingFront, OK, GoingFrontBalance, Strict]
# - [GoingFront, OK, GoingUp, Strict]

# Initial state
init: Pause


ObserverPipelines:
- name: HRP4Pipeline                    # - Create a new pipeline
  gui: true                              #   diplay the pipeline in the GUI (default = false)
  log: true                              #   log observers (default)
  observers:                             #   declare which observers to use
  - type: Encoder                        # - Use an EncoderObserver
    config:    
      robot: hrp4
      updateRobot: hrp4                    
      position: encoderValues            #    - Sets joint position from encoder sensor values (default)
      velocity: encoderFiniteDifferences #    - Computes joint velocities by finite differences  (default)
      computeFV: true                    # We now have the estimation of each joint position and velocity and the corresponding body positions and velocities, but we are still missing the floating base
  - type: Attitude
    config: 
      bodySensor: Accelerometer 
  - type: KinematicInertial              # - Estimates the floating base state using the KinematicInertial observer
    update: true                         #   update the real robot instance from its results
    gui: true                            #   Displays the estimated velocity as an arrow (default)
    config:
      robot: hrp4
      updateRobot: hrp4
      bodySensor: Accelerometer          # This observer only uses roll and pitch rotation information from this sensor along with a kinematic anchor point and the robot kinematics between the anchor frame and the floating base frame. The anchor frame is expected to be provided through a datastore callback (see below for details)
- name: HumanPipeline
  gui: true
  log: true
  observers:
  - type: Encoder                        # - Use an EncoderObserver
    config: 
      robot: human
      updateRobot: human                             
      position: encoderValues            #    - Sets joint position from encoder sensor values (default)
      velocity: encoderFiniteDifferences #    - Computes joint velocities by finite differences  (default)
      computeFV: true 
  - type: BodySensor                     # - Use a BodySensor observer
    update: true                        #   Do not update the real robot state
    gui: true                           #   Do not display in the gui
    config: 
      robot: human                             
      bodySensor: FloatingBase           #   In simulation, the interface will fill this sensor with ground truth values
                                         #   The observer computes the position and velocity of the floating base
                                         #   by transforming the sensor measurements to the floating base frame
  # - type: Attitude
  #   config: 
  #     robot: human
  #     bodySensor: Accelerometer 
  # - type: KinematicInertial              # - Estimates the floating base state using the KinematicInertial observer
  #   update: true                         #   update the real robot instance from its results
  #   gui: true                            #   Displays the estimated velocity as an arrow (default)
  #   config:
  #     robot: human
  #     updateRobot: human
  #     bodySensor: Accelerometer 



# # Additional robots to load
# robots:
#   ground:
#     module: env/ground
# # General constraints, always on
# constraints:
# - type: contact
# - type: dynamics
#   damper: [0.1, 0.01, 0.5]
# - type: compoundJoint
# # Collision constraint
# collisions:
# - type: collision
#   useMinimal: true
# # Initial set of contacts
# contacts:
# - r1: jvrc1
#   r2: ground
#   r1Surface: LeftFoot
#   r2Surface: AllGround
# - r1: jvrc1
#   r2: ground
#   r1Surface: RightFoot
#   r2Surface: AllGround

# # Some options for a specific robot
# jvrc1:
#   posture:
#     stiffness: 1
#     weight: 10
#   ff:
#     stiffness: 2
#     weight: 100
# # Implement some additional text states
# states: {}
# # Transitions map
# transitions:
# - [HelpUpController_Initial, OK, HelpUpController_Initial, Strict]
# # Initial state
# init: HelpUpController_Initial
